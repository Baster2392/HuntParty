Index: server/socket-server.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <sys/socket.h>\r\n#include <netinet/in.h>\r\n#include <arpa/inet.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <unistd.h>\r\n#include <string.h>\r\n#include <pthread.h>\r\n\r\nstruct Player {\r\n\tint id;\r\n\tint score;\r\n};\r\n\r\nstruct Target {\r\n\tint id;\r\n\tint positionx;\r\n\tint positiony;\r\n\tint type;\r\n\tbool isAlive;\r\n\r\n\tvoid kill()\r\n\t{\r\n\t\tisAlive = false;\r\n\t}\r\n\r\n\tvoid moveUpwards()\r\n\t{\r\n\t\tpositionY++;\r\n\t}\r\n};\r\n\r\nvoid*\r\nconnection_handler(void* socket_desc) {\r\n\r\n\t/* Get the socket descriptor */\r\n\tint sock = *(int*)socket_desc;\r\n\tint read_size;\r\n\tchar* message, client_message[2000];\r\n\r\n\t/* Send some messages to the client */\r\n\tmessage = \"Greetings! I am your connection handler\\n\";\r\n\twrite(sock, message, strlen(message));\r\n\r\n\tmessage = \"Now type something and i shall repeat what you type\\n\";\r\n\twrite(sock, message, strlen(message));\r\n\r\n\tmessage = \"Empty line will close the connection\\n\";\r\n\twrite(sock, message, strlen(message));\r\n\r\n\tdo {\r\n\t\tread_size = recv(sock, client_message, 2000, 0);\r\n\t\tclient_message[read_size] = '\\0';\r\n\r\n\t\t/* Send the message back to client */\r\n\t\twrite(sock, client_message, strlen(client_message));\r\n\r\n\t\t/* Clear the message buffer */\r\n\t\tmemset(client_message, 0, 2000);\r\n\t} while (read_size > 2); /* Wait for empty line */\r\n\r\n\tfprintf(stderr, \"Client disconnected\\n\");\r\n\r\n\tclose(sock);\r\n\tpthread_exit(NULL);\r\n}\r\n\r\nint\r\nmain(int argc, char* argv[]) {\r\n\tint listenfd = 0, connfd = 0;\r\n\tstruct sockaddr_in serv_addr;\r\n\r\n\tpthread_t thread_id;\r\n\r\n\tlistenfd = socket(AF_INET, SOCK_STREAM, 0);\r\n\tmemset(&serv_addr, '0', sizeof(serv_addr));\r\n\r\n\tserv_addr.sin_family = AF_INET;\r\n\tserv_addr.sin_addr.s_addr = htonl(INADDR_ANY);\r\n\tserv_addr.sin_port = htons(5000);\r\n\r\n\tbind(listenfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr));\r\n\r\n\tlisten(listenfd, 10);\r\n\r\n\tfor (;;) {\r\n\t\tconnfd = accept(listenfd, (struct sockaddr*)NULL, NULL);\r\n\t\tfprintf(stderr, \"Connection accepted\\n\");\r\n\t\tpthread_create(&thread_id, NULL, connection_handler, (void*)&connfd);\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/socket-server.c b/server/socket-server.c
--- a/server/socket-server.c	(revision b8f3582574f8f3cb06bb70968af97f3e05e614d7)
+++ b/server/socket-server.c	(date 1710961878619)
@@ -6,6 +6,7 @@
 #include <unistd.h>
 #include <string.h>
 #include <pthread.h>
+#include "struct/pqueue.h"
 
 struct Player {
 	int id;
@@ -17,17 +18,7 @@
 	int positionx;
 	int positiony;
 	int type;
-	bool isAlive;
-
-	void kill()
-	{
-		isAlive = false;
-	}
-
-	void moveUpwards()
-	{
-		positionY++;
-	}
+	int isAlive;
 };
 
 void*
@@ -72,9 +63,11 @@
 
 	pthread_t thread_id;
 
+    // create socket
 	listenfd = socket(AF_INET, SOCK_STREAM, 0);
 	memset(&serv_addr, '0', sizeof(serv_addr));
 
+    // configure connection
 	serv_addr.sin_family = AF_INET;
 	serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
 	serv_addr.sin_port = htons(5000);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5353a0fb-2eaf-4c10-8099-b95a945c0b6b\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/pythonProject.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\r\n  <component name=\"ProjectId\" id=\"2drtJ1ycRNIdx1V24YtY8snZSpj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;last_opened_file_path&quot;: &quot;//wsl.localhost/Ubuntu/home/baster/Studia/pr/pythonProject&quot;\n  }\n}</component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"Unnamed\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.12\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.main\" />\r\n      <item itemvalue=\"Python.Unnamed\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-d68999036c7f-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.14475.56\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5353a0fb-2eaf-4c10-8099-b95a945c0b6b\" name=\"Changes\" comment=\"\" />\r\n      <created>1710777950036</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710777950036</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b8f3582574f8f3cb06bb70968af97f3e05e614d7)
+++ b/.idea/workspace.xml	(date 1710961878669)
@@ -4,13 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5353a0fb-2eaf-4c10-8099-b95a945c0b6b" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/pythonProject.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+    <list default="true" id="5353a0fb-2eaf-4c10-8099-b95a945c0b6b" name="Changes" comment="Init commit">
+      <change afterPath="$PROJECT_DIR$/server/struct/pqueue.c" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/server/struct/pqueue.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/socket-client.c" beforeDir="false" afterPath="$PROJECT_DIR$/server/socket-client.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/socket-server.c" beforeDir="false" afterPath="$PROJECT_DIR$/server/socket-server.c" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -18,6 +17,11 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectColorInfo">{
@@ -29,15 +33,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;//wsl.localhost/Ubuntu/home/baster/Studia/pr/pythonProject&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python.main.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "//wsl.localhost/Ubuntu/home/baster/Studia/pr/HuntParty/client/main.py"
   }
-}</component>
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="\\wsl.localhost\Ubuntu\home\baster\Studia\pr\HuntParty\server\struct" />
+    </key>
+  </component>
   <component name="RunManager" selected="Python.main">
     <configuration name="Unnamed" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="pythonProject" />
@@ -75,7 +84,7 @@
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/client/main.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -105,6 +114,30 @@
       <option name="presentableId" value="Default" />
       <updated>1710777950036</updated>
     </task>
+    <task id="LOCAL-00001" summary="Init commit">
+      <option name="closed" value="true" />
+      <created>1710959543777</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1710959543777</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Init commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="Init commit" />
+  </component>
 </project>
\ No newline at end of file
Index: server/struct/pqueue.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/struct/pqueue.h b/server/struct/pqueue.h
new file mode 100644
--- /dev/null	(date 1710961925479)
+++ b/server/struct/pqueue.h	(date 1710961925479)
@@ -0,0 +1,22 @@
+typedef struct pqueue pqueue;
+struct pqueue {
+	int k;
+	void *data;
+	pqueue *next;
+	pqueue *prev;
+};
+
+void
+qinsert(pqueue **phead, void *data, int k);
+
+void
+qlist(pqueue *head, void (*print_data)(void *));
+
+void
+insertBefore(pqueue* node, void* data, int k);
+
+void
+insertAtEnd(pqueue* lastNode, void* data, int k);
+
+void
+qremove(pqueue **phead, int k);
Index: server/struct/pqueue.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/struct/pqueue.c b/server/struct/pqueue.c
new file mode 100644
--- /dev/null	(date 1710961925489)
+++ b/server/struct/pqueue.c	(date 1710961925489)
@@ -0,0 +1,115 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include "pqueue.h"
+
+void
+qlist(pqueue *head, void (*print_data)(void *)) {
+	pqueue *p;
+	
+	for (p = head; p != NULL; p = p->next) {
+		printf("%d: ", p->k);
+		print_data(p->data);
+		printf("\n");
+	}
+	
+}
+
+void
+qinsert(pqueue **phead, void *data, int k) {
+	if (*phead == NULL)
+	{
+		*phead = (pqueue*)malloc(sizeof(pqueue));
+		(*phead)->data = data;
+		(*phead)->k = k;
+		(*phead)->prev = NULL;
+		(*phead)->next = NULL;
+		return;
+	}
+
+	if ((*phead)->k < k)
+	{
+		insertBefore(*phead, data, k);
+		*phead = (*phead)->prev;
+		return;
+	}
+
+	pqueue* currentNode = *phead;
+	while (currentNode->next != NULL)
+	{
+		if (currentNode->k < k)
+		{
+			insertBefore(currentNode, data, k);
+			return;
+		}
+		else
+		{
+			currentNode = currentNode->next;
+		}
+	}
+
+	insertAtEnd(currentNode, data, k);
+}
+
+void
+insertBefore(pqueue* node, void* data, int k)
+{
+	pqueue* newNode = (pqueue*)malloc(sizeof(pqueue));
+	newNode->data = data;
+	newNode->k = k;
+
+	newNode->next = node;
+	newNode->prev = node->prev;
+	node->prev = newNode;
+}
+
+void
+insertAtEnd(pqueue* lastNode, void* data, int k)
+{
+	pqueue* newNode = (pqueue*)malloc(sizeof(pqueue));
+	newNode->data = data;
+	newNode->k = k;
+
+	newNode->prev = lastNode;
+	newNode->next = NULL;
+	lastNode->next = newNode;
+}
+
+
+void
+qremove(pqueue **phead, int k)
+{
+	if (*phead == NULL)
+	{
+		return;
+	}
+
+	if ((*phead)->k == k)
+	{
+		pqueue* next = (*phead)->next;
+		free(*phead);
+		*phead = next;
+		return;
+	}
+
+	pqueue* currentNode = *phead;
+	while (currentNode != NULL)
+	{
+		if (currentNode->k == k)
+		{
+			currentNode->prev->next = currentNode->next;
+
+			if (currentNode->next != NULL)
+			{
+				currentNode->next->prev = currentNode->prev;
+			}
+			
+			free(currentNode);
+			return;
+		}
+		else
+		{
+			currentNode = currentNode->next;
+		}
+	}
+}
+
Index: server/socket-client.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <sys/socket.h>\r\n#include <netinet/in.h>\r\n#include <arpa/inet.h>\r\n#include <unistd.h>\r\n\r\n#define PORT 5000\r\n\r\nint main() {\r\n    int sock = 0, valread;\r\n    struct sockaddr_in serv_addr;\r\n    char* hello = \"Hello from client\";\r\n    char buffer[1024] = { 0 };\r\n\r\n    // Tworzenie gniazda klienta\r\n    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {\r\n        perror(\"socket creation failed\");\r\n        return -1;\r\n    }\r\n\r\n    // Konfiguracja struktury adresu serwera\r\n    serv_addr.sin_family = AF_INET;\r\n    serv_addr.sin_port = htons(PORT);\r\n\r\n    // Konwersja adresu IP z kropkowymi dziesi�tnymi na binarne\r\n    if (inet_pton(AF_INET, \"127.0.0.1\", &serv_addr.sin_addr) <= 0) {\r\n        perror(\"Invalid address/ Address not supported\");\r\n        return -1;\r\n    }\r\n\r\n    // Nawi�zanie po��czenia z serwerem\r\n    if (connect(sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {\r\n        perror(\"Connection failed\");\r\n        return -1;\r\n    }\r\n\r\n    // Wys�anie wiadomo�ci do serwera\r\n    send(sock, hello, strlen(hello), 0);\r\n    printf(\"Hello message sent to server\\n\");\r\n\r\n    // Odbi�r odpowiedzi od serwera\r\n    valread = read(sock, buffer, 1024);\r\n    printf(\"%s\\n\", buffer);\r\n\r\n    return 0;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/socket-client.c b/server/socket-client.c
--- a/server/socket-client.c	(revision b8f3582574f8f3cb06bb70968af97f3e05e614d7)
+++ b/server/socket-client.c	(date 1710961166459)
@@ -8,6 +8,8 @@
 
 #define PORT 5000
 
+// to jest useless jak coś
+
 int main() {
     int sock = 0, valread;
     struct sockaddr_in serv_addr;
